apiVersion: apps/v1
kind: Deployment
metadata:
  name: social-app
  namespace: social-media
  labels:
    app: social-app
    version: v1
spec:
  replicas: 10 # Initial replicas, HPA will scale this
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: social-app
      version: v1
  template:
    metadata:
      labels:
        app: social-app
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/api/metrics"
    spec:
      serviceAccountName: social-app-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: social-app
        image: social-media/app:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: social-app-secrets
              key: database-url
        - name: REDIS_HOST_1
          value: "redis-cluster-1.redis.svc.cluster.local"
        - name: REDIS_HOST_2
          value: "redis-cluster-2.redis.svc.cluster.local"
        - name: REDIS_HOST_3
          value: "redis-cluster-3.redis.svc.cluster.local"
        - name: SERVER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ELASTICSEARCH_URL
          value: "http://elasticsearch.search.svc.cluster.local:9200"
        - name: MINIO_ENDPOINT
          value: "minio.storage.svc.cluster.local"
        - name: RABBITMQ_URL
          valueFrom:
            secretKeyRef:
              name: social-app-secrets
              key: rabbitmq-url
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/startup
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: app-config
          mountPath: /app/config
          readOnly: true
        - name: shared-storage
          mountPath: /app/public/uploads
      volumes:
      - name: app-config
        configMap:
          name: social-app-config
      - name: shared-storage
        persistentVolumeClaim:
          claimName: social-app-storage

---
apiVersion: v1
kind: Service
metadata:
  name: social-app-service
  namespace: social-media
  labels:
    app: social-app
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: social-app

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: social-app-hpa
  namespace: social-media
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: social-app
  minReplicas: 10
  maxReplicas: 1000 # Scale up to 1000 pods during peak
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: concurrent_connections
      target:
        type: AverageValue
        averageValue: "500"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 50
        periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: social-app-config
  namespace: social-media
data:
  app.conf: |
    server {
      keepalive_timeout 65;
      client_max_body_size 100M;
      gzip on;
      gzip_types text/plain text/css application/json application/javascript;
    }
  
---
apiVersion: v1
kind: Secret
metadata:
  name: social-app-secrets
  namespace: social-media
type: Opaque
data:
  database-url: cG9zdGdyZXNxbDovL3VzZXI6cGFzc0BkYi5leGFtcGxlLmNvbTo1NDMyL3NvY2lhbF9kYg== # base64 encoded
  rabbitmq-url: YW1xcDovL2FkbWluOmFkbWluQHJhYmJpdG1xLnNlcnZpY2UuY29t # base64 encoded
  jwt-secret: c3VwZXItc2VjcmV0LWp3dC1rZXk= # base64 encoded

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: social-app-sa
  namespace: social-media

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: social-app-storage
  namespace: social-media
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Ti # 1TB for media files
  storageClassName: fast-ssd 